boolean currentState = LOW;//stroage for current button state
boolean lastState = LOW;//storage for last button state

const int dataPin[] = {A0,A1,A2,A3,4,5,6,7};  //data lines : pixel output of camera (input to arduino)
const int xclkPin = 11;  //system clock input of camera (output of arduino)
const int pclkPin = 2;   //pixel clock output of camera (input to arduino)
const int hrefPin = 8;   //horizontal reference : high during active pixels of row
const int vsyncPin = 3;  //vertical sync : low during frame
const int siocPin = A5;
const int siodPin = A4;

const int rx = 0; //Receives from BT
const int tx = 1; //Transmits to BT

const int triggerPin = 12;

const int ledPin = 13;

int prevPCLK, currPCLK;

void setup() {
  Serial.begin(9600);
  for(int i=0;i<8;i++)  {
    pinMode(dataPin[i], INPUT);
  }
  pinMode(xclkPin, OUTPUT);
  pinMode(pclkPin, INPUT);
  pinMode(hrefPin, INPUT);
  pinMode(vsyncPin, INPUT);
  pinMode(triggerPin, INPUT);
  pinMode(ledPin, OUTPUT);
  
  prevPCLK = digitalRead(pclkPin);
  analogWrite(xclkPin, 128);
  

}

void loop() {
  currentState =PINB & 0b010000;
   if(currentState == HIGH && lastState == LOW){//if button has just been pressed
       Serial.println("pressed");
       while(!(PIND & 0b00001000))  {
       
         PORTB = PORTB | B100000; 
        while(PINB & 0b000001)  {
        
        currPCLK = PIND & 0b00000100;
        if(prevPCLK == LOW && currPCLK == HIGH)  {
          
          byte lower = PINC;
          byte upper = PIND;
          lower = lower & 0b001111;
          upper = upper & 0b11110000;
         
           byte currentByte = upper | lower;
         
         
           Serial.write(currentByte);
           Serial.println(currentByte);
         }
        }
      PORTB = PORTB & B011111;

      delay(1);//crude form of button debouncing
    }
  } 
  else if(currentState == LOW && lastState == HIGH){
    delay(1);//crude form of button debouncing
  }
  lastState = currentState;
}
