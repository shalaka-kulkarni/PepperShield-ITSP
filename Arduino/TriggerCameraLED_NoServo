const int buttonPin = 12;
boolean currentState = LOW;//stroage for current button state
boolean lastState = LOW;//storage for last button state

const int dataPin[] = {A0,A1,A2,A3,4,5,6,7};  //data lines : pixel output of camera (input to arduino)
const int xclkPin = 11;  //system clock input of camera (output of arduino)
const int pclkPin = 2;   //pixel clock output of camera (input to arduino)
const int hrefPin = 8;   //horizontal reference : high during active pixels of row
const int vsyncPin = 3;  //vertical sync : low during frame
const int siocPin = A5;
const int siodPin = A4;

const int rx = 0; //Receives from BT
const int tx = 1; //Transmits to BT

const int ledPin = 13;
  volatile byte lower = PINC;
  volatile byte upper = PIND;
  
void sendData()
{
  // Part of code where you want to go fast Copy the statement below and paste where yu want the code to start
  //attachInterrupt(0, sendData, CHANGE);
  lower = lower & 0b0001111;
  upper = upper & 0b11110000;
  byte currentByte = upper | lower;
  Serial.write(currentByte);
  // Adding serial steps makes it slow
}

int prevPCLK, currPCLK;

void setup() {
  Serial.begin(9600);
  for(int i=0;i<8;i++)  {
    pinMode(dataPin[i], INPUT);
  }
  pinMode(buttonPin, INPUT);
  pinMode(xclkPin, OUTPUT);
  pinMode(pclkPin, INPUT);
  pinMode(hrefPin, INPUT);
  pinMode(vsyncPin, INPUT);
  pinMode(ledPin, OUTPUT);
  prevPCLK = digitalRead(pclkPin);
  analogWrite(xclkPin, 128);
  attachInterrupt(0, sendData, RISING);

}

void loop() {
  currentState = digitalRead(buttonPin);
   if (currentState == HIGH && lastState == LOW){//if button has just been pressed
       Serial.println("pressed");
       while(digitalRead(vsyncPin) == LOW)  {
       
       digitalWrite(ledPin, HIGH); 
       while(digitalRead(hrefPin == HIGH))  {
        
       currPCLK = digitalRead(pclkPin);
       
      }
    digitalWrite(ledPin, LOW);

    delay(1);//crude form of button debouncing
  }
  }
   else if(currentState == LOW && lastState == HIGH){
    Serial.println("released");
    delay(1);//crude form of button debouncing
  }
  lastState = currentState;
}
